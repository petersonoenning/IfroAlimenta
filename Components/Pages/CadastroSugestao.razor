@page "/sugestao"
@using IfroAlimenta.Models
@using IfroAlimenta.Controllers
@inject SugestaoController SugestaoController
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<div class="container-fluid py-4">
    <h3 class="text-center mb-4 fw-bold text-uppercase" style="font-size: 1.8rem; color: #333;">Cadastro de Sugestão</h3>

    <div class="card shadow-sm p-4">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="descricao" class="form-label fw-bold">Descrição:</label>
                <input @bind="novaSugestao.Descricao" type="text" class="form-control shadow-sm" id="descricao">
            </div>
            <div class="col-md-6 mb-3">
                <label for="data" class="form-label fw-bold">Data:</label>
                <input @bind="novaSugestao.Data" type="date" class="form-control shadow-sm" id="data">
            </div>
        </div>

        <div class="text-center mt-4">
            @if (enabledButton)
            {
                <button type="button" class="btn btn-warning me-2 px-4 py-2 shadow-sm btn-animate" @onclick="Cancelar">
                    <i class="bi bi-x-circle me-2"></i>Cancelar
                </button>
                <button type="button" class="btn btn-success ms-2 px-4 py-2 shadow-sm btn-animate" @onclick="Salvar">
                    <i class="bi bi-check-circle me-2"></i>Salvar
                </button>
            }
            else
            {
                <div class="alert alert-success text-center mb-3" role="alert">
                    Sugestão cadastrada com sucesso!
                </div>
                <button type="button" class="btn btn-primary px-4 py-2 shadow-sm btn-animate" @onclick="NovoCadastroSugestao">
                    <i class="bi bi-plus-circle me-2"></i>Novo Cadastro
                </button>
            }
        </div>
    </div>
</div>

<style>
    .form-control {
        border-radius: 0.25rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        font-size: 1rem;
    }

    .card {
        border-radius: 0.5rem;
    }

    .btn-animate {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-animate:hover {
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .alert {
        font-size: 1rem;
        font-weight: bold;
        border-radius: 0.25rem;
    }

    .text-center {
        text-align: center;
    }
</style>

@code {
    private Sugestao novaSugestao = new Sugestao();
    private List<Sugestao> sugestoes = new List<Sugestao>();
    private bool enabledButton = true;

    protected override async Task OnInitializedAsync()
    {
        await CarregarSugestoes();
    }

    private async Task Salvar()
    {
        await SugestaoController.Add(novaSugestao);
        await SugestaoController.Salvar();
        enabledButton = false;
        await CarregarSugestoes(); // Atualiza a lista de sugestões
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/sugestao", forceLoad: true);
    }

    private void NovoCadastroSugestao()
    {
        NavigationManager.NavigateTo("/sugestao", forceLoad: true);
        novaSugestao = new Sugestao(); // Limpa o formulário
        enabledButton = true;
    }

    private async Task CarregarSugestoes()
    {
        sugestoes = await SugestaoController.ListaSugestoes();
    }

 
}
