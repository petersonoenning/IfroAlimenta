@page "/atribuirnota"
@using IfroAlimenta.Models
@using IfroAlimenta.Controllers
@inject ProdutoController ProdutoController
@inject AvaliacaoController AvaliacaoController
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Atribuir Nota ao Produto</h3>

<div class="container">
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label for="produto" class="form-label">Produto:</label>
                <select @bind="avaliacao.ProdutoId" class="form-select" id="produto">
                    @foreach (var produto in produtos)
                    {
                        <option value="@produto.Id">@produto.Nome</option>
                    }
                </select>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="nota" class="form-label">Nota:</label>
                <select @bind="avaliacao.Nota" class="form-select" id="nota">
                    @for (byte i = 1; i <= 5; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
        </div>
    </div>

    @if (enabledButton)
    {
        <button type="button" class="btn btn-warning" @onclick="Cancelar">CANCELAR</button>
        <button type="button" class="btn btn-success" @onclick="Salvar">SALVAR</button>
    }
    else
    {
        <div class="alert alert-success" role="alert">
            Avaliação cadastrada com sucesso!
        </div>
        <button type="button" class="btn btn-primary" @onclick="NovoCadastroAvaliacao">NOVO CADASTRO</button>
    }
</div>

@code {
    private Avaliacao avaliacao = new Avaliacao { Data = DateTime.Now };
    private List<Produto> produtos = new List<Produto>();
    private bool enabledButton = true;

    protected override async Task OnInitializedAsync()
    {
        produtos = await ProdutoController.ListarProdutos();
    }

    private async Task Salvar()
    {
        await AvaliacaoController.Add(avaliacao);
        await AvaliacaoController.Salvar();
        enabledButton = false;
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/atribuirnota");
    }

    private void NovoCadastroAvaliacao()
    {
        avaliacao = new Avaliacao { Data = DateTime.Now }; // Limpa o formulário
        enabledButton = true;
    }
}