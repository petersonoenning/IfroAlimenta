@page "/consultar-produtos"
@using IfroAlimenta.Models
@using IfroAlimenta.Controllers
@using IfroAlimenta.Utilitarios
@inject ProdutoController ProdutoController
@inject NavigationManager navegacao
@rendermode InteractiveServer
<<<<<<< HEAD
@inject NavigationManager nav
@inject IJSRuntime JSRuntime

<script>
    function NovaGuia(url) {
        window.open(url, '_blank');
    }
</script>
=======
@inject IWebHostEnvironment env
>>>>>>> 43153c78e2240ab00ee8b35dbef4658868264df8

<<<<<<< HEAD
<h3>CONSULTA DE PRODUTOS</h3>

<div class="container">
    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <label for="produto" class="form-label">PRODUTOS CADASTRADOS:</label>
    <select @onchange="SelecionarProduto" class="form-select" aria-label="Selecione um produto">
        <option selected>Selecione um produto</option>
        @foreach (var item in listaProdutos)
        {
            <option value="@item.Id">@item.Nome</option>
        }
    </select>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <div class="row align-items-start">
        <!-- Informações do produto (lado esquerdo) -->
        <div class="col-md-8">
            <div class="mb-3">
                <label for="nome" class="form-label">NOME:</label>
                <input @bind="produto.Nome" type="text" class="form-control" id="nome" disabled />
            </div>
            <div class="mb-3">
                <label for="descricao" class="form-label">DESCRIÇÃO:</label>
                <input @bind="produto.Descricao" type="text" class="form-control" id="descricao" disabled />
            </div>
            <div class="mb-3">
                <label for="quantidade" class="form-label">QUANTIDADE:</label>
                <input @bind="produto.Quantidade" type="text" class="form-control" id="quantidade" disabled />
            </div>
            <div class="mb-3">
                <label for="categoria" class="form-label">CATEGORIA:</label>
                <input value="@ObterDescricaoCategoria(produto.Categoria)" type="text" class="form-control" id="categoria" disabled />
            </div>
            <div class="mb-3">
                <label for="tipo" class="form-label">TIPO:</label>
                <input value="@ObterDescricaoTipo(produto.Tipo)" type="text" class="form-control" id="tipo" disabled />
            </div>
            <div class="mb-3">
                <label for="valor" class="form-label">VALOR:</label>
                <input @bind="produto.Valor" type="text" class="form-control" id="valor" disabled />
            </div>
        </div>

        <!-- Foto do produto (lado direito) -->
        <div class="col-md-4">
            <label for="anexo" class="form-label">IMAGEM:</label>
            <div class="mb-3">
                @if (!string.IsNullOrEmpty(produto.Anexo)) // Verifica se o caminho da foto está disponível
                {
                    <img src="@produto.Anexo" alt="Imagem do Produto" class="img-fluid" style="max-width: 300px; max-height: 300px; margin-top: 50px;" />
                }
                else
                {
                    <p>Imagem não disponível</p>
                }
            </div>
        </div>
    </div>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
=======
<div class="container-fluid py-4">
    <h3 class="text-center mb-4 fw-bold text-uppercase" style="font-size: 1.8rem; color: #333;">Lista de Produtos</h3>

    @if (produtos != null && produtos.Any())
    {
        <div class="card shadow-lg p-4">
            <table class="table table-striped">
                <thead class="table-light">
                    <tr>
                        <th class="fw-bold">Nome</th>
                        <th class="fw-bold">Descrição</th>
                        <th class="fw-bold">Quantidade</th>
                        <th class="fw-bold">Categoria</th>
                        <th class="fw-bold">Tipo</th>
                        <th class="fw-bold">Valor</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var produto in produtos)
                    {
                        <tr>
                            <td>@produto.Nome</td>
                            <td>@produto.Descricao</td>
                            <td>@produto.Quantidade</td>
                            <td>@ObterDescricaoCategoria(produto.Categoria)</td>
                            <td>@ObterDescricaoTipo(produto.Tipo)</td>
                            <td>@(produto.Valor.HasValue ? produto.Valor.Value.ToString("F2") : "0.00")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="text-center mt-4">
            <button type="button" class="btn btn-warning" @onclick="ImprimirTodos">IMPRIMIR TODOS</button>
        </div>
    }
    
    else
    {
        <div class="alert alert-warning text-center mt-4" role="alert">
            Nenhum produto encontrado.
        </div>
    }
>>>>>>> 880150afa750d28fbac5d38a5e28dbec39b3a0b4
</div>

<style>
    .table {
        margin-top: 20px;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table th, .table td {
            vertical-align: middle;
            padding: 12px;
        }

        .table thead th {
            background-color: #f8f9fa;
            color: #333;
        }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .table-striped tbody tr:hover {
        background-color: #e9ecef;
    }

    .card {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
    }

    .card-shadow-lg {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .alert {
        font-size: 1rem;
        font-weight: bold;
        border-radius: 0.25rem;
        padding: 15px;
        margin-top: 20px;
    }

    .alert-warning {
        background-color: #fff3cd;
        color: #856404;
        border-color: #ffeeba;
    }
</style>


@code {
    public List<Produto> listaProdutos = new List<Produto>();
    public Produto? produto = new Produto();

    protected override async Task OnInitializedAsync()
    {
        var lista = await ProdutoController.ListarProdutos();
        listaProdutos = lista.ToList();
    }

    public void SelecionarProduto(ChangeEventArgs e)
    {
        int id = Convert.ToInt32(e.Value);
        produto = listaProdutos.FirstOrDefault(p => p.Id == id);
    }

    private string ObterDescricaoCategoria(byte? categoria)
    {
        var categorias = new Dictionary<byte, string>
        {
            { 1, "Doce" },
            { 2, "Salgado" }
        };

        return categoria.HasValue && categorias.ContainsKey(categoria.Value) ? categorias[categoria.Value] : "Desconhecido";
    }

    private string ObterDescricaoTipo(byte? tipo)
    {
        var tipos = new Dictionary<byte, string>
        {
            { 1, "Bebida" },
            { 2, "Comida" }
        };

        return tipo.HasValue && tipos.ContainsKey(tipo.Value) ? tipos[tipo.Value] : "Desconhecido";
    }

    public async Task ImprimirTodos()
    {


        var impressora = new Impressora();
        await impressora.GerarImpressao(produtos, nav, JSRuntime);
    }
}


