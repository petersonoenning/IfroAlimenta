@page "/cadastrocardapio"
@using IfroAlimenta.Models
@using IfroAlimenta.Controllers
@inject ProdutoController ProdutoController
@inject CardapioController CardapioController
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<div class="container-fluid py-4">
    <h3 class="text-center mb-4 fw-bold text-uppercase" style="font-size: 1.8rem; color: #333;">Cadastro do Cardápio do Dia</h3>

    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <!-- Card para o formulário -->
            <div class="card shadow-sm p-4">
                <!-- Data do Cardápio -->
                <div class="mb-4">
                    <label for="dataCardapio" class="form-label fw-bold">Data do Cardápio:</label>
                    <input type="date" @bind="selectedDate" class="form-control shadow-sm" id="dataCardapio" />
                </div>

                <!-- Seleção de Produtos -->
                <div class="mb-4">
                    <label class="form-label fw-bold">Selecione os Produtos:</label>
                    <div class="card p-3 border-0 shadow-sm">
                        @foreach (var produto in produtos)
                        {
                            <div class="form-check custom-checkbox">
                                <input type="checkbox" class="form-check-input" @onchange="e => ToggleProdutoSelection(produto.Id, (bool)e.Value)" id="produto-@produto.Id" />
                                <label class="form-check-label" for="produto-@produto.Id">@produto.Nome</label>
                            </div>
                        }
                    </div>
                </div>

                <!-- Botões de Ação Centralizados -->
                <div class="text-center mt-4">
                    @if (enabledButton)
                    {
                        <button type="button" class="btn btn-danger me-2 px-4 py-2 shadow-sm btn-animate" style="font-weight: bold; font-size: 1rem;" @onclick="Cancelar">
                            <i class="bi bi-x-circle me-2"></i>Cancelar
                        </button>
                        <button type="button" class="btn btn-success ms-2 px-4 py-2 shadow-sm btn-animate" style="font-weight: bold; font-size: 1rem;" @onclick="AdicionarCardapio">
                            <i class="bi bi-check-circle me-2"></i>Salvar
                        </button>
                    }
                    else
                    {
                        <div class="alert alert-success text-center mb-3" role="alert">
                            Cardápio cadastrado com sucesso!
                        </div>
                        <button type="button" class="btn btn-primary px-4 py-2 shadow-sm btn-animate" style="font-weight: bold; font-size: 1rem;" @onclick="NovoCadastroCardapio">
                            <i class="bi bi-plus-circle me-2"></i>Novo Cadastro
                        </button>
                    }
                </div>

            </div>
        </div>
    </div>
</div>

<style>
    .custom-checkbox input[type="checkbox"] {
        width: 18px;
        height: 18px;
        margin-right: 8px;
        transition: all 0.3s;
    }

    .custom-checkbox label {
        cursor: pointer;
        transition: color 0.3s;
    }

    .custom-checkbox input[type="checkbox"]:checked + label {
        color: #28a745;
    }

    .btn-cancelar,
    .btn-salvar,
    .btn-novo-cadastro {
        font-size: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s, transform 0.3s;
    }

        .btn-cancelar:hover {
            background-color: #c82333;
            transform: translateY(-2px);
        }

        .btn-salvar:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

        .btn-novo-cadastro:hover {
            transform: translateY(-2px);
        }

    .alert {
        opacity: 1;
        transition: opacity 0.5s ease-in-out;
    }

    .btn-animate {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-animate:hover {
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
</style>


<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>


@code {
    private DateTime selectedDate = DateTime.Now;
    private List<Produto> produtos = new List<Produto>();
    private List<int> produtosSelecionados = new List<int>();
    private bool enabledButton = true;

    protected override async Task OnInitializedAsync()
    {
        produtos = await ProdutoController.ListarProdutos();
    }

    private void ToggleProdutoSelection(int produtoId, bool isSelected)
    {
        if (isSelected)
        {
            if (!produtosSelecionados.Contains(produtoId))
            {
                produtosSelecionados.Add(produtoId);
            }
        }
        else
        {
            produtosSelecionados.Remove(produtoId);
        }
    }

    private async Task AdicionarCardapio()
    {
        var cardapio = new Cardapio
            {
                Data = selectedDate
            };

        await CardapioController.AdicionarCardapio(cardapio, produtosSelecionados);
        enabledButton = false;
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/cadastrocardapio", forceLoad: true);
    }

    private void NovoCadastroCardapio()
    {
        NavigationManager.NavigateTo("/cadastrocardapio", forceLoad: true);
        selectedDate = DateTime.Now;
        produtosSelecionados.Clear();
        enabledButton = true;
    }
}
